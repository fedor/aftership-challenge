// Generated by CoffeeScript 1.7.1
(function() {
  var exports, get_checkpoint, tools, utc_date;

  tools = require('tools');

  utc_date = function(date_string) {
    var date;
    date = new Date(date_string);
    date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));
    return date = date.toISOString().substring(0, date.length - 5);
  };

  get_checkpoint = function(checkpoint) {
    var chunks, date, date_set, day_time, message, month_date, year;
    date_set = false;
    chunks = checkpoint.split(' at ');
    if (chunks.length > 1) {
      try {
        message = chunks[0];
        chunks = chunks[1].split(' on ');
        day_time = chunks[0];
        chunks = chunks[1].split(', ');
        month_date = chunks[0];
        chunks = chunks[1].split(' ');
        year = chunks[0];
        date_set = true;
      } catch (_error) {

      }
    }
    if (!date_set) {
      try {
        chunks = checkpoint.split(', ');
        message = chunks[0];
        month_date = chunks[1];
        year = chunks[2];
        day_time = chunks.length > 3 ? chunks[3] : "12:00 am";
      } catch (_error) {
        message = checkpoint;
        month_date = '1 January';
        day_time = '12:00 am';
        year = '1990';
      }
    }
    date = utc_date("" + month_date + " " + year + " " + day_time);
    return {
      country_name: '',
      message: message,
      checkpoint_time: date
    };
  };

  exports = function(tracking_number, callback) {
    var api_key, result, url;
    api_key = "971NA0002771";
    result = {
      checkpoints: []
    };
    url = "http://production.shippingapis.com/ShippingAPI.dll?API=TrackV2&XML=<TrackRequest USERID=\"" + api_key + "\"><TrackID ID=\"" + tracking_number + "\"></TrackID></TrackRequest>";
    return tools.request_xml(url, function(error, body) {
      var point, points, track_info, track_summary;
      if (error) {
        return callback(error);
      }
      try {
        track_info = result.TrackResponse.TrackInfo[0];
        track_summary = track_info.TrackSummary[0];
        points = track_info.TrackDetail.reverse();
        points.push(track_summary);
        result.checkpoints = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = points.length; _i < _len; _i++) {
            point = points[_i];
            _results.push(get_checkpoint(point));
          }
          return _results;
        })();
        return callback(null, result);
      } catch (_error) {
        error = _error;
        return callback(error);
      }
    });
  };

}).call(this);
