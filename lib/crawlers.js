// Generated by CoffeeScript 1.7.1
(function() {
  var parseString, request, user_id, usps_checkpoint, utc_date;

  request = require('request');

  parseString = require('xml2js').parseString;

  user_id = "971NA0002771";

  utc_date = function(date_string) {
    var date;
    date = new Date(date_string);
    date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));
    date = date.toISOString();
    return date = date.substring(0, date.length - 5);
  };

  usps_checkpoint = function(checkpoint) {
    var chunks, date, date_set, day_time, message, month_date, year;
    date_set = false;
    chunks = checkpoint.split(' at ');
    if (chunks.length > 1) {
      try {
        message = chunks[0];
        chunks = chunks[1].split(' on ');
        day_time = chunks[0];
        chunks = chunks[1].split(', ');
        month_date = chunks[0];
        chunks = chunks[1].split(' ');
        year = chunks[0];
        date_set = true;
      } catch (_error) {

      }
    }
    if (!date_set) {
      chunks = checkpoint.split(', ');
      message = chunks[0];
      month_date = chunks[1];
      year = chunks[2];
      day_time = chunks.length > 3 ? chunks[3] : "12:00 am";
    }
    date = utc_date("" + month_date + " " + year + " " + day_time);
    return {
      country_name: '',
      message: message,
      checkpoint_time: date
    };
  };

  exports.usps = function(tracking_number, callback) {
    var tracking_result, url;
    tracking_result = {
      checkpoints: []
    };
    url = "http://production.shippingapis.com/ShippingAPI.dll?API=TrackV2&XML=<TrackRequest USERID=\"" + user_id + "\"><TrackID ID=\"" + tracking_number + "\"></TrackID></TrackRequest>";
    return request(url, function(error, response, body) {
      if (!error && response.statusCode === 200) {
        return parseString(body, function(err, result) {
          var checkpoint, checkpoints, last, _i, _len;
          if (err) {
            callback(err);
          }
          try {
            checkpoints = result.TrackResponse.TrackInfo[0].TrackDetail;
            last = result.TrackResponse.TrackInfo[0].TrackSummary[0];
            checkpoints.unshift(last);
            for (_i = 0, _len = checkpoints.length; _i < _len; _i++) {
              checkpoint = checkpoints[_i];
              tracking_result.checkpoints.unshift(usps_checkpoint(checkpoint));
            }
          } catch (_error) {
            error = _error;
            callback(error);
          }
          return callback(null, tracking_result);
        });
      } else if (error) {
        return callback(error);
      } else {
        return callback(new Error("HTTP returned " + response.statusCode));
      }
    });
  };

}).call(this);
